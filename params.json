{"name":"Primal.js","tagline":"A tiny, yet flexibel, event library.","body":"# primal.js\r\n\r\n**primal** */ˈprʌɪm(ə)l/*<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; most important; primary or fundamental.\r\n\r\nprimal.js is a small utility library heavily inspired by riot.js and Mootools. Why primal.js when there is riot.js? The short explanation is that I prefer having the choice of extending the prototype. In addition, primal.js does not have any dependencies, and will never have, on external libraries for instance jQuery.\r\n\r\nThere are two ways to use primal, first by extending the prototype:\r\n```javascript\r\nvar Car = function(){\r\n    primal.observable(this, Car);\r\n};\r\n```\r\nOr by extending on instance of an object:\r\n```javascript\r\nvar car = primal.observable({});\r\n```\r\n\r\n## primal.observable(instance, class\\*)\r\nHandle events on native javascript object by extending them with primal.observable\r\n\r\n* **instance** *(object)*- The object to extend\r\n* __class\\*__ *(constructor)* - Function to extend prototype on<br/>\r\n\\*_optional_\r\n\r\n**Example:**\r\n```javascript\r\nvar car = primal.observable({});\r\n```\r\n\r\n#### addEvent(event, fn)\r\nAdd an event listener to an object.\r\n\r\n* **event** *(string)* - The event to listen to\r\n* **fn** *(function)* - The function to call when the event is triggered\r\n\r\n**Example:**\r\n```javascript\r\ncar.addEvent('running', function(){...});\r\n```\r\n\r\n#### addEvents(options)\r\nAdd several events listeners to an object.\r\n\r\n* **options** *(object)* - Object defining the events to listen to\r\n\r\n**Example:**\r\n```javascript\r\ncar.addEvents({\r\n\trunning: function(){...},\r\n    stoped: function(){...}\r\n});\r\n```\r\n\r\n#### fireEvent(event, arg|[arg], delay)\r\nFire an event. Events can be triggered both from the object or from the outside.\r\n\r\n* **event** *(string)* - The event to trigger\r\n* **arg|[arg]** *(mixed|array)* - An argument or an array of arguments\r\n* **delay** *(integer)* - The delay before triggering the event\r\n\r\n**Example:**\r\n```javascript\r\nCar.prototype.start = function(){\r\n\tthis.isStarted = true;\r\n    this.fireEvent('running', [this.timesStarted, this.driver]);\r\n};\r\n```\r\n\r\n#### removeEvent(event, function)\r\nRemove an event listener from an object.\r\n\r\n* **event** *(string)* - The event to remove from\r\n* **fn** *(function)* - The function to remove \r\n\r\n**Example:**\r\n```javascript\r\nvar eventListner = function(timeStarted, driver){...};\r\n\r\ncar.addEvent('running', eventListner);\r\n...\r\ncar.removeEvent('running', eventListner);\r\n```\r\n\r\n#### removeEvents(event)\r\nRemove all events of the specified type\r\n\r\n* **event** *(string)* - The event to remove\r\n\r\n**Example:**\r\n```javascript\r\ncar.removeEvent('running');\r\n```\r\n\r\n\r\n## primal.mediator(instance, class\\*)\r\nSubscribe and publish messages.\r\n\r\n* **instance** (object) - The object to extend\r\n* __class\\*__ *(optional)* - Function to extend prototype on\r\n\r\n**Example:**\r\n```javascript\r\nmediator = primal.mediator({});\r\n```\r\n\r\n#### subscribe(topic, fn)\r\nSubscribe to topic on the event mediator.\r\n\r\n* **topic** *(string)* - The event to remove from\r\n* **fn** *(function)* - The function to remove \r\n\r\n**Example:**\r\n```javascript\r\nvar eventListner = function(){...};\r\ncar.subscribe('keyTurned', eventListner);\r\n```\r\n\r\n#### publish(topic, arg, delay)\r\nPublish an message to the event mediator.\r\n\r\n* **topic** *(string)* - The topic to publish\r\n* **arg|[arg]** *(mixed|array)* - An argument or an array of arguments\r\n* **delay** *(integer)* - The delay before triggering the event\r\n\r\n**Example:**\r\n```javascript\r\ncar.publish('keyTurned', []);\r\n```\r\n\r\n#### unsubscribe(topic, fn)\r\nUnsubscibe, stop listening, to a topic on the event mediator.\r\n\r\n* **topic** *(string)* - The event to remove from\r\n* **fn** *(function)* - The function to remove \r\n\r\n**Example:**\r\n```javascript\r\nvar eventListner = function(){...};\r\ncar.subscribe('keyTurned', eventListner);\r\n...\r\ncar.unsubscribe('keyTurned', eventListner);\r\n```\r\n\r\n## License \r\nprimal.js is licensed under the MIT license\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}